{"ast":null,"code":"'use strict';\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactPropTypesLibElementType = require('react-prop-types/lib/elementType');\n\nvar _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);\n\nvar _utilsBootstrapUtils = require('./utils/bootstrapUtils');\n\nvar _PaginationButton = require('./PaginationButton');\n\nvar _PaginationButton2 = _interopRequireDefault(_PaginationButton);\n\nvar _SafeAnchor = require('./SafeAnchor');\n\nvar _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);\n\nvar Pagination = _react2['default'].createClass({\n  displayName: 'Pagination',\n  propTypes: {\n    activePage: _react2['default'].PropTypes.number,\n    items: _react2['default'].PropTypes.number,\n    maxButtons: _react2['default'].PropTypes.number,\n\n    /**\n     * When `true`, will display the first and the last button page\n     */\n    boundaryLinks: _react2['default'].PropTypes.bool,\n\n    /**\n     * When `true`, will display the default node value ('&hellip;').\n     * Otherwise, will display provided node (when specified).\n     */\n    ellipsis: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.node]),\n\n    /**\n     * When `true`, will display the default node value ('&laquo;').\n     * Otherwise, will display provided node (when specified).\n     */\n    first: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.node]),\n\n    /**\n     * When `true`, will display the default node value ('&raquo;').\n     * Otherwise, will display provided node (when specified).\n     */\n    last: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.node]),\n\n    /**\n     * When `true`, will display the default node value ('&lsaquo;').\n     * Otherwise, will display provided node (when specified).\n     */\n    prev: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.node]),\n\n    /**\n     * When `true`, will display the default node value ('&rsaquo;').\n     * Otherwise, will display provided node (when specified).\n     */\n    next: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.node]),\n    onSelect: _react2['default'].PropTypes.func,\n\n    /**\n     * You can use a custom element for the buttons\n     */\n    buttonComponentClass: _reactPropTypesLibElementType2['default']\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      activePage: 1,\n      items: 1,\n      maxButtons: 0,\n      first: false,\n      last: false,\n      prev: false,\n      next: false,\n      ellipsis: true,\n      boundaryLinks: false,\n      buttonComponentClass: _SafeAnchor2['default'],\n      bsClass: 'pagination'\n    };\n  },\n  renderPageButtons: function renderPageButtons() {\n    var pageButtons = [];\n    var startPage = undefined,\n        endPage = undefined,\n        hasHiddenPagesAfter = undefined;\n    var _props = this.props;\n    var maxButtons = _props.maxButtons;\n    var activePage = _props.activePage;\n    var items = _props.items;\n    var onSelect = _props.onSelect;\n    var ellipsis = _props.ellipsis;\n    var buttonComponentClass = _props.buttonComponentClass;\n    var boundaryLinks = _props.boundaryLinks;\n\n    if (maxButtons) {\n      var hiddenPagesBefore = activePage - parseInt(maxButtons / 2, 10);\n      startPage = hiddenPagesBefore > 1 ? hiddenPagesBefore : 1;\n      hasHiddenPagesAfter = startPage + maxButtons <= items;\n\n      if (!hasHiddenPagesAfter) {\n        endPage = items;\n        startPage = items - maxButtons + 1;\n\n        if (startPage < 1) {\n          startPage = 1;\n        }\n      } else {\n        endPage = startPage + maxButtons - 1;\n      }\n    } else {\n      startPage = 1;\n      endPage = items;\n    }\n\n    for (var pagenumber = startPage; pagenumber <= endPage; pagenumber++) {\n      pageButtons.push(_react2['default'].createElement(_PaginationButton2['default'], {\n        key: pagenumber,\n        eventKey: pagenumber,\n        active: pagenumber === activePage,\n        onSelect: onSelect,\n        buttonComponentClass: buttonComponentClass\n      }, pagenumber));\n    }\n\n    if (boundaryLinks && ellipsis && startPage !== 1) {\n      pageButtons.unshift(_react2['default'].createElement(_PaginationButton2['default'], {\n        key: 'ellipsisFirst',\n        disabled: true,\n        buttonComponentClass: buttonComponentClass\n      }, _react2['default'].createElement('span', {\n        'aria-label': 'More'\n      }, this.props.ellipsis === true ? '…' : this.props.ellipsis)));\n      pageButtons.unshift(_react2['default'].createElement(_PaginationButton2['default'], {\n        key: 1,\n        eventKey: 1,\n        active: false,\n        onSelect: onSelect,\n        buttonComponentClass: buttonComponentClass\n      }, '1'));\n    }\n\n    if (maxButtons && hasHiddenPagesAfter && ellipsis) {\n      pageButtons.push(_react2['default'].createElement(_PaginationButton2['default'], {\n        key: 'ellipsis',\n        disabled: true,\n        buttonComponentClass: buttonComponentClass\n      }, _react2['default'].createElement('span', {\n        'aria-label': 'More'\n      }, this.props.ellipsis === true ? '…' : this.props.ellipsis)));\n\n      if (boundaryLinks && endPage !== items) {\n        pageButtons.push(_react2['default'].createElement(_PaginationButton2['default'], {\n          key: items,\n          eventKey: items,\n          active: false,\n          onSelect: onSelect,\n          buttonComponentClass: buttonComponentClass\n        }, items));\n      }\n    }\n\n    return pageButtons;\n  },\n  renderPrev: function renderPrev() {\n    if (!this.props.prev) {\n      return null;\n    }\n\n    return _react2['default'].createElement(_PaginationButton2['default'], {\n      key: 'prev',\n      eventKey: this.props.activePage - 1,\n      disabled: this.props.activePage === 1,\n      onSelect: this.props.onSelect,\n      buttonComponentClass: this.props.buttonComponentClass\n    }, _react2['default'].createElement('span', {\n      'aria-label': 'Previous'\n    }, this.props.prev === true ? '‹' : this.props.prev));\n  },\n  renderNext: function renderNext() {\n    if (!this.props.next) {\n      return null;\n    }\n\n    return _react2['default'].createElement(_PaginationButton2['default'], {\n      key: 'next',\n      eventKey: this.props.activePage + 1,\n      disabled: this.props.activePage >= this.props.items,\n      onSelect: this.props.onSelect,\n      buttonComponentClass: this.props.buttonComponentClass\n    }, _react2['default'].createElement('span', {\n      'aria-label': 'Next'\n    }, this.props.next === true ? '›' : this.props.next));\n  },\n  renderFirst: function renderFirst() {\n    if (!this.props.first) {\n      return null;\n    }\n\n    return _react2['default'].createElement(_PaginationButton2['default'], {\n      key: 'first',\n      eventKey: 1,\n      disabled: this.props.activePage === 1,\n      onSelect: this.props.onSelect,\n      buttonComponentClass: this.props.buttonComponentClass\n    }, _react2['default'].createElement('span', {\n      'aria-label': 'First'\n    }, this.props.first === true ? '«' : this.props.first));\n  },\n  renderLast: function renderLast() {\n    if (!this.props.last) {\n      return null;\n    }\n\n    return _react2['default'].createElement(_PaginationButton2['default'], {\n      key: 'last',\n      eventKey: this.props.items,\n      disabled: this.props.activePage >= this.props.items,\n      onSelect: this.props.onSelect,\n      buttonComponentClass: this.props.buttonComponentClass\n    }, _react2['default'].createElement('span', {\n      'aria-label': 'Last'\n    }, this.props.last === true ? '»' : this.props.last));\n  },\n  render: function render() {\n    return _react2['default'].createElement('ul', _extends({}, this.props, {\n      className: _classnames2['default'](this.props.className, _utilsBootstrapUtils.getClassSet(this.props))\n    }), this.renderFirst(), this.renderPrev(), this.renderPageButtons(), this.renderNext(), this.renderLast());\n  }\n});\n\nexports['default'] = _utilsBootstrapUtils.bsClass('pagination', Pagination);\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}