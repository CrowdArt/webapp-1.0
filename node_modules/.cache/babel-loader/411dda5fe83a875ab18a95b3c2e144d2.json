{"ast":null,"code":"'use strict';\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactPropTypesLibDeprecated = require('react-prop-types/lib/deprecated');\n\nvar _reactPropTypesLibDeprecated2 = _interopRequireDefault(_reactPropTypesLibDeprecated);\n\nvar _styleMaps = require('./styleMaps');\n\nvar _utilsBootstrapUtils = require('./utils/bootstrapUtils');\n\nvar Alert = _react2['default'].createClass({\n  displayName: 'Alert',\n  propTypes: {\n    onDismiss: _react2['default'].PropTypes.func,\n\n    /**\n     * @private\n     */\n    dismissAfter: _reactPropTypesLibDeprecated2['default'](_react2['default'].PropTypes.number, 'No longer supported.'),\n    closeLabel: _react2['default'].PropTypes.string\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      closeLabel: 'Close Alert'\n    };\n  },\n  renderDismissButton: function renderDismissButton() {\n    return _react2['default'].createElement('button', {\n      type: 'button',\n      className: 'close',\n      onClick: this.props.onDismiss,\n      'aria-hidden': 'true',\n      tabIndex: '-1'\n    }, _react2['default'].createElement('span', null, 'Ã—'));\n  },\n  renderSrOnlyDismissButton: function renderSrOnlyDismissButton() {\n    return _react2['default'].createElement('button', {\n      type: 'button',\n      className: 'close sr-only',\n      onClick: this.props.onDismiss\n    }, this.props.closeLabel);\n  },\n  render: function render() {\n    var classes = _utilsBootstrapUtils.getClassSet(this.props);\n\n    var isDismissable = !!this.props.onDismiss;\n    classes[_utilsBootstrapUtils.prefix(this.props, 'dismissable')] = isDismissable;\n    return _react2['default'].createElement('div', _extends({}, this.props, {\n      role: 'alert',\n      className: _classnames2['default'](this.props.className, classes)\n    }), isDismissable ? this.renderDismissButton() : null, this.props.children, isDismissable ? this.renderSrOnlyDismissButton() : null);\n  },\n  componentDidMount: function componentDidMount() {\n    if (this.props.dismissAfter && this.props.onDismiss) {\n      this.dismissTimer = setTimeout(this.props.onDismiss, this.props.dismissAfter);\n    }\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    clearTimeout(this.dismissTimer);\n  }\n});\n\nexports['default'] = _utilsBootstrapUtils.bsStyles(_styleMaps.State.values(), _styleMaps.State.INFO, _utilsBootstrapUtils.bsClass('alert', Alert));\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}