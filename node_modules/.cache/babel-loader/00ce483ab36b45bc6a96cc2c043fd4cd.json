{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Link = require('react-router/lib/Link');\n\nvar _Link2 = _interopRequireDefault(_Link);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // This is largely taken from react-router/lib/Link.\n\n\nvar propTypes = {\n  onlyActiveOnIndex: _react2.default.PropTypes.bool.isRequired,\n  to: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.object]).isRequired,\n  onClick: _react2.default.PropTypes.func,\n  active: _react2.default.PropTypes.bool,\n  children: _react2.default.PropTypes.node.isRequired\n};\nvar contextTypes = {\n  router: _react2.default.PropTypes.object\n};\nvar defaultProps = {\n  onlyActiveOnIndex: false\n};\n\nvar LinkContainer = function (_React$Component) {\n  _inherits(LinkContainer, _React$Component);\n\n  function LinkContainer() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, LinkContainer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onClick = function (event) {\n      if (_this.props.children.props.onClick) {\n        _this.props.children.props.onClick(event);\n      }\n\n      _Link2.default.prototype.handleClick.call(_this, event);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  LinkContainer.prototype.render = function render() {\n    var router = this.context.router;\n    var _props = this.props;\n    var onlyActiveOnIndex = _props.onlyActiveOnIndex;\n    var to = _props.to;\n    var children = _props.children;\n\n    var props = _objectWithoutProperties(_props, ['onlyActiveOnIndex', 'to', 'children']);\n\n    props.onClick = this.onClick; // Ignore if rendered outside Router context; simplifies unit testing.\n\n    if (router) {\n      props.href = router.createHref(to);\n\n      if (props.active == null) {\n        props.active = router.isActive(to, onlyActiveOnIndex);\n      }\n    }\n\n    return _react2.default.cloneElement(_react2.default.Children.only(children), props);\n  };\n\n  return LinkContainer;\n}(_react2.default.Component);\n\nLinkContainer.propTypes = propTypes;\nLinkContainer.contextTypes = contextTypes;\nLinkContainer.defaultProps = defaultProps;\nexports.default = LinkContainer;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}