{"ast":null,"code":"'use strict';\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ListGroupItem = require('./ListGroupItem');\n\nvar _ListGroupItem2 = _interopRequireDefault(_ListGroupItem);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _utilsValidComponentChildren = require('./utils/ValidComponentChildren');\n\nvar _utilsValidComponentChildren2 = _interopRequireDefault(_utilsValidComponentChildren);\n\nvar ListGroup = function (_React$Component) {\n  _inherits(ListGroup, _React$Component);\n\n  function ListGroup() {\n    _classCallCheck(this, ListGroup);\n\n    _React$Component.apply(this, arguments);\n  }\n\n  ListGroup.prototype.render = function render() {\n    var _this = this;\n\n    var items = _utilsValidComponentChildren2['default'].map(this.props.children, function (item, index) {\n      return _react.cloneElement(item, {\n        key: item.key ? item.key : index\n      });\n    });\n\n    if (this.areCustomChildren(items)) {\n      var Component = this.props.componentClass;\n      return _react2['default'].createElement(Component, _extends({}, this.props, {\n        className: _classnames2['default'](this.props.className, 'list-group')\n      }), items);\n    }\n\n    var shouldRenderDiv = false;\n\n    if (!this.props.children) {\n      shouldRenderDiv = true;\n    } else {\n      _utilsValidComponentChildren2['default'].forEach(this.props.children, function (child) {\n        if (_this.isAnchorOrButton(child.props)) {\n          shouldRenderDiv = true;\n        }\n      });\n    }\n\n    return shouldRenderDiv ? this.renderDiv(items) : this.renderUL(items);\n  };\n\n  ListGroup.prototype.isAnchorOrButton = function isAnchorOrButton(props) {\n    return props.href || props.onClick;\n  };\n\n  ListGroup.prototype.areCustomChildren = function areCustomChildren(children) {\n    var customChildren = false;\n\n    _utilsValidComponentChildren2['default'].forEach(children, function (child) {\n      if (child.type !== _ListGroupItem2['default']) {\n        customChildren = true;\n      }\n    }, this);\n\n    return customChildren;\n  };\n\n  ListGroup.prototype.renderUL = function renderUL(items) {\n    var listItems = _utilsValidComponentChildren2['default'].map(items, function (item) {\n      return _react.cloneElement(item, {\n        listItem: true\n      });\n    });\n\n    return _react2['default'].createElement('ul', _extends({}, this.props, {\n      className: _classnames2['default'](this.props.className, 'list-group')\n    }), listItems);\n  };\n\n  ListGroup.prototype.renderDiv = function renderDiv(items) {\n    return _react2['default'].createElement('div', _extends({}, this.props, {\n      className: _classnames2['default'](this.props.className, 'list-group')\n    }), items);\n  };\n\n  return ListGroup;\n}(_react2['default'].Component);\n\nListGroup.defaultProps = {\n  componentClass: 'div'\n};\nListGroup.propTypes = {\n  className: _react2['default'].PropTypes.string,\n\n  /**\n   * The element for ListGroup if children are\n   * user-defined custom components.\n   * @type {(\"ul\"|\"div\")}\n   */\n  componentClass: _react2['default'].PropTypes.oneOf(['ul', 'div']),\n  id: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.number])\n};\nexports['default'] = ListGroup;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}