{"ast":null,"code":"'use strict';\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _utilsBootstrapUtils = require('./utils/bootstrapUtils');\n\nvar _utilsValidComponentChildren = require('./utils/ValidComponentChildren');\n\nvar _utilsValidComponentChildren2 = _interopRequireDefault(_utilsValidComponentChildren);\n\nvar PanelGroup = _react2['default'].createClass({\n  displayName: 'PanelGroup',\n  propTypes: {\n    accordion: _react2['default'].PropTypes.bool,\n    activeKey: _react2['default'].PropTypes.any,\n    className: _react2['default'].PropTypes.string,\n    children: _react2['default'].PropTypes.node,\n    defaultActiveKey: _react2['default'].PropTypes.any,\n    onSelect: _react2['default'].PropTypes.func\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      accordion: false\n    };\n  },\n  getInitialState: function getInitialState() {\n    var defaultActiveKey = this.props.defaultActiveKey;\n    return {\n      activeKey: defaultActiveKey\n    };\n  },\n  render: function render() {\n    var classes = _utilsBootstrapUtils.getClassSet(this.props);\n\n    var _props = this.props;\n    var className = _props.className;\n\n    var props = _objectWithoutProperties(_props, ['className']);\n\n    if (this.props.accordion) {\n      props.role = 'tablist';\n    }\n\n    return _react2['default'].createElement('div', _extends({}, props, {\n      className: _classnames2['default'](className, classes),\n      onSelect: null\n    }), _utilsValidComponentChildren2['default'].map(props.children, this.renderPanel));\n  },\n  renderPanel: function renderPanel(child, index) {\n    var activeKey = this.props.activeKey != null ? this.props.activeKey : this.state.activeKey;\n    var props = {\n      bsStyle: child.props.bsStyle || this.props.bsStyle,\n      key: child.key ? child.key : index,\n      ref: child.ref\n    };\n\n    if (this.props.accordion) {\n      props.headerRole = 'tab';\n      props.panelRole = 'tabpanel';\n      props.collapsible = true;\n      props.expanded = child.props.eventKey === activeKey;\n      props.onSelect = this.handleSelect;\n    }\n\n    return _react.cloneElement(child, props);\n  },\n  shouldComponentUpdate: function shouldComponentUpdate() {\n    // Defer any updates to this component during the `onSelect` handler.\n    return !this._isChanging;\n  },\n  handleSelect: function handleSelect(key, e) {\n    e.preventDefault();\n\n    if (this.props.onSelect) {\n      this._isChanging = true;\n      this.props.onSelect(key, e);\n      this._isChanging = false;\n    }\n\n    if (this.state.activeKey === key) {\n      key = null;\n    }\n\n    this.setState({\n      activeKey: key\n    });\n  }\n});\n\nexports['default'] = _utilsBootstrapUtils.bsClass('panel-group', PanelGroup);\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}