{"ast":null,"code":"'use strict';\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _utilsBootstrapUtils = require('./utils/bootstrapUtils');\n\nvar _utilsCreateChainedFunction = require('./utils/createChainedFunction');\n\nvar _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);\n\nvar NavbarToggle = _react2['default'].createClass({\n  displayName: 'NavbarToggle',\n  propTypes: {\n    onClick: _react2['default'].PropTypes.func,\n\n    /**\n     * The toggle content, if left empty it will render the default toggle (seen above).\n     */\n    children: _react.PropTypes.node\n  },\n  contextTypes: {\n    $bs_navbar_bsClass: _react.PropTypes.string,\n    $bs_navbar_onToggle: _react.PropTypes.func,\n    $bs_navbar_expanded: _react.PropTypes.bool\n  },\n  render: function render() {\n    var _props = this.props;\n    var onClick = _props.onClick;\n    var className = _props.className;\n    var children = _props.children;\n\n    var props = _objectWithoutProperties(_props, ['onClick', 'className', 'children']);\n\n    var _context = this.context;\n    var _context$$bs_navbar_bsClass = _context.$bs_navbar_bsClass;\n    var bsClass = _context$$bs_navbar_bsClass === undefined ? 'navbar' : _context$$bs_navbar_bsClass;\n    var onToggle = _context.$bs_navbar_onToggle;\n    var expanded = _context.$bs_navbar_expanded;\n\n    var buttonProps = _extends({\n      type: 'button'\n    }, props, {\n      onClick: _utilsCreateChainedFunction2['default'](onClick, onToggle),\n      className: _classnames2['default'](className, _utilsBootstrapUtils.prefix({\n        bsClass: bsClass\n      }, 'toggle'), !expanded && 'collapsed')\n    });\n\n    if (children) {\n      return _react2['default'].createElement('button', buttonProps, children);\n    }\n\n    return _react2['default'].createElement('button', buttonProps, _react2['default'].createElement('span', {\n      className: 'sr-only'\n    }, 'Toggle navigation'), _react2['default'].createElement('span', {\n      className: 'icon-bar'\n    }), _react2['default'].createElement('span', {\n      className: 'icon-bar'\n    }), _react2['default'].createElement('span', {\n      className: 'icon-bar'\n    }));\n  }\n});\n\nexports['default'] = NavbarToggle;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}