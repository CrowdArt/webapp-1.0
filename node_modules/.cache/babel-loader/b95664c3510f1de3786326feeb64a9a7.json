{"ast":null,"code":"'use strict';\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _uncontrollable = require('uncontrollable');\n\nvar _uncontrollable2 = _interopRequireDefault(_uncontrollable);\n\nvar idPropType = _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]);\n\nvar TabContainer = _react2['default'].createClass({\n  displayName: 'TabContainer',\n  propTypes: {\n    /**\n     * HTML id attribute, required if no `generateChildId` prop\n     * is specified.\n     */\n    id: function id(props) {\n      var error = null;\n\n      if (!props.generateChildId) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        error = idPropType.apply(undefined, [props].concat(args));\n\n        if (!error && !props.id) {\n          error = new Error('In order to properly initialize Tabs in a way that is accessible to assistive technologies ' + '(such as screen readers) an `id` or a `generateChildId` prop to TabContainer is required');\n        }\n      }\n\n      return error;\n    },\n\n    /**\n     * A function that takes an eventKey and type and returns a\n     * unique id for child tab NavItems and TabPanes. The function _must_ be a pure function,\n     * meaning it should always return the _same_ id for the same set of inputs. The default\n     * value requires that an `id` to be set for the TabContainer.\n     *\n     * The `type` argument will either be `\"tab\"` or `\"pane\"`.\n     *\n     * @defaultValue (eventKey, type) => `${this.props.id}-${type}-${key}`\n     */\n    generateChildId: _react.PropTypes.func,\n\n    /**\n     * A callback fired when a tab is selected.\n     *\n     * @controllable activeKey\n     */\n    onSelect: _react.PropTypes.func,\n\n    /**\n     * The `eventKey` of the currently active tab.\n     *\n     * @controllable onSelect\n     */\n    activeKey: _react.PropTypes.any\n  },\n  childContextTypes: {\n    $bs_tabcontainer: _react2['default'].PropTypes.shape({\n      activeKey: _react.PropTypes.any,\n      onSelect: _react.PropTypes.func,\n      getId: _react.PropTypes.func\n    })\n  },\n  getChildContext: function getChildContext() {\n    var _props = this.props;\n    var activeKey = _props.activeKey;\n    var generateChildId = _props.generateChildId;\n    var id = _props.id;\n    return {\n      $bs_tabcontainer: {\n        activeKey: activeKey,\n        onSelect: this.handleSelect,\n        getId: generateChildId || function (key, type) {\n          return id ? id + '-' + type + '-' + key : null;\n        }\n      }\n    };\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    // isMounted() isn't `true` at this point;\n    this.unmounting = true;\n  },\n  handleSelect: function handleSelect(key) {\n    if (!this.unmounting) {\n      this.props.onSelect(key);\n    }\n  },\n  render: function render() {\n    var _props2 = this.props;\n    var children = _props2.children;\n\n    var props = _objectWithoutProperties(_props2, ['children']);\n\n    delete props.generateChildId;\n    delete props.onSelect;\n    delete props.activeKey;\n    return _react2['default'].cloneElement(_react2['default'].Children.only(children), props);\n  }\n});\n\nexports['default'] = _uncontrollable2['default'](TabContainer, {\n  activeKey: 'onSelect'\n});\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}