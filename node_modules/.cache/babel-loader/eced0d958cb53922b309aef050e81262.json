{"ast":null,"code":"'use strict';\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _Object$keys = require('babel-runtime/core-js/object/keys')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Button = require('./Button');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _Dropdown = require('./Dropdown');\n\nvar _Dropdown2 = _interopRequireDefault(_Dropdown);\n\nvar _SplitToggle = require('./SplitToggle');\n\nvar _SplitToggle2 = _interopRequireDefault(_SplitToggle);\n\nvar _lodashCompatObjectOmit = require('lodash-compat/object/omit');\n\nvar _lodashCompatObjectOmit2 = _interopRequireDefault(_lodashCompatObjectOmit);\n\nvar _lodashCompatObjectPick = require('lodash-compat/object/pick');\n\nvar _lodashCompatObjectPick2 = _interopRequireDefault(_lodashCompatObjectPick);\n\nvar SplitButton = function (_React$Component) {\n  _inherits(SplitButton, _React$Component);\n\n  function SplitButton() {\n    _classCallCheck(this, SplitButton);\n\n    _React$Component.apply(this, arguments);\n  }\n\n  SplitButton.prototype.render = function render() {\n    var _props = this.props;\n    var children = _props.children;\n    var title = _props.title;\n    var onClick = _props.onClick;\n    var target = _props.target;\n    var href = _props.href;\n    var toggleLabel = _props.toggleLabel;\n    var bsSize = _props.bsSize;\n    var bsStyle = _props.bsStyle;\n\n    var props = _objectWithoutProperties(_props, ['children', 'title', 'onClick', 'target', 'href', 'toggleLabel', 'bsSize', 'bsStyle']);\n\n    var disabled = props.disabled;\n\n    var dropdownProps = _lodashCompatObjectPick2['default'](props, _Object$keys(_Dropdown2['default'].ControlledComponent.propTypes));\n\n    var buttonProps = _lodashCompatObjectOmit2['default'](props, _Object$keys(_Dropdown2['default'].ControlledComponent.propTypes));\n\n    return _react2['default'].createElement(_Dropdown2['default'], dropdownProps, _react2['default'].createElement(_Button2['default'], _extends({}, buttonProps, {\n      onClick: onClick,\n      bsStyle: bsStyle,\n      bsSize: bsSize,\n      disabled: disabled,\n      target: target,\n      href: href\n    }), title), _react2['default'].createElement(_SplitToggle2['default'], {\n      'aria-label': toggleLabel || title,\n      bsStyle: bsStyle,\n      bsSize: bsSize,\n      disabled: disabled\n    }), _react2['default'].createElement(_Dropdown2['default'].Menu, null, children));\n  };\n\n  return SplitButton;\n}(_react2['default'].Component);\n\nSplitButton.propTypes = _extends({}, _Dropdown2['default'].propTypes, {\n  bsStyle: _Button2['default'].propTypes.bsStyle,\n\n  /**\n   * @private\n   */\n  onClick: function onClick() {},\n  target: _react2['default'].PropTypes.string,\n  href: _react2['default'].PropTypes.string,\n\n  /**\n   * The content of the split button.\n   */\n  title: _react2['default'].PropTypes.node.isRequired,\n\n  /**\n   * Accessible label for the toggle; the value of `title` if not specified.\n   */\n  toggleLabel: _react2['default'].PropTypes.string\n});\nSplitButton.defaultProps = {\n  disabled: false,\n  dropup: false,\n  pullRight: false\n};\nSplitButton.Toggle = _SplitToggle2['default'];\nexports['default'] = SplitButton;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}