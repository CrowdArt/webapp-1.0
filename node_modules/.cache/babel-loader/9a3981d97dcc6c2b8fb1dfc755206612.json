{"ast":null,"code":"'use strict';\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactPropTypesLibAll = require('react-prop-types/lib/all');\n\nvar _reactPropTypesLibAll2 = _interopRequireDefault(_reactPropTypesLibAll);\n\nvar _utilsBootstrapUtils = require('./utils/bootstrapUtils');\n\nvar _utilsCreateChainedFunction = require('./utils/createChainedFunction');\n\nvar _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);\n\nvar _SafeAnchor = require('./SafeAnchor');\n\nvar _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);\n\nvar MenuItem = function (_React$Component) {\n  _inherits(MenuItem, _React$Component);\n\n  function MenuItem(props) {\n    _classCallCheck(this, MenuItem);\n\n    _React$Component.call(this, props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    if (!this.props.href || this.props.disabled) {\n      event.preventDefault();\n    }\n\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (this.props.onSelect) {\n      this.props.onSelect(this.props.eventKey, event);\n    }\n  };\n\n  MenuItem.prototype.render = function render() {\n    if (this.props.divider) {\n      return _react2['default'].createElement('li', {\n        role: 'separator',\n        className: _classnames2['default']('divider', this.props.className),\n        style: this.props.style\n      });\n    }\n\n    if (this.props.header) {\n      var headerClass = _utilsBootstrapUtils.prefix(this.props, 'header');\n\n      return _react2['default'].createElement('li', {\n        role: 'heading',\n        className: _classnames2['default'](headerClass, this.props.className),\n        style: this.props.style\n      }, this.props.children);\n    }\n\n    var _props = this.props;\n    var className = _props.className;\n    var style = _props.style;\n    var onClick = _props.onClick;\n\n    var props = _objectWithoutProperties(_props, ['className', 'style', 'onClick']);\n\n    delete props.onSelect;\n    var classes = {\n      disabled: this.props.disabled,\n      active: this.props.active\n    };\n    return _react2['default'].createElement('li', {\n      role: 'presentation',\n      className: _classnames2['default'](className, classes),\n      style: style\n    }, _react2['default'].createElement(_SafeAnchor2['default'], _extends({}, props, {\n      role: 'menuitem',\n      tabIndex: '-1',\n      onClick: _utilsCreateChainedFunction2['default'](onClick, this.handleClick)\n    })));\n  };\n\n  return MenuItem;\n}(_react2['default'].Component);\n\nMenuItem.propTypes = {\n  /**\n   * Highlight the menu item as active.\n   */\n  active: _react2['default'].PropTypes.bool,\n\n  /**\n   * Disable the menu item, making it unselectable.\n   */\n  disabled: _react2['default'].PropTypes.bool,\n\n  /**\n   * Styles the menu item as a horizontal rule, providing visual separation between\n   * groups of menu items.\n   */\n  divider: _reactPropTypesLibAll2['default'](_react2['default'].PropTypes.bool, function (props) {\n    if (props.divider && props.children) {\n      return new Error('Children will not be rendered for dividers');\n    }\n  }),\n\n  /**\n   * Value passed to the `onSelect` handler, useful for identifying the selected menu item.\n   */\n  eventKey: _react2['default'].PropTypes.any,\n\n  /**\n   * Styles the menu item as a header label, useful for describing a group of menu items.\n   */\n  header: _react2['default'].PropTypes.bool,\n\n  /**\n   * HTML `href` attribute corresponding to `a.href`.\n   */\n  href: _react2['default'].PropTypes.string,\n\n  /**\n   * HTML `target` attribute corresponding to `a.target`.\n   */\n  target: _react2['default'].PropTypes.string,\n\n  /**\n   * HTML `title` attribute corresponding to `a.title`.\n   */\n  title: _react2['default'].PropTypes.string,\n\n  /**\n   * Callback fired when the menu item is clicked.\n   */\n  onClick: _react2['default'].PropTypes.func,\n  onKeyDown: _react2['default'].PropTypes.func,\n\n  /**\n   * Callback fired when the menu item is selected.\n   *\n   * ```js\n   * (eventKey: any, event: Object) => any\n   * ```\n   */\n  onSelect: _react2['default'].PropTypes.func,\n\n  /**\n   * HTML `id` attribute.\n   */\n  id: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.number])\n};\nMenuItem.defaultProps = {\n  divider: false,\n  disabled: false,\n  header: false\n};\nexports['default'] = _utilsBootstrapUtils.bsClass('dropdown', MenuItem);\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}