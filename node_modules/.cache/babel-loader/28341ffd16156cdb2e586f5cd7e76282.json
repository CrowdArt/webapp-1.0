{"ast":null,"code":"'use strict';\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactPropTypesLibElementType = require('react-prop-types/lib/elementType');\n\nvar _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);\n\nvar _styleMaps = require('./styleMaps');\n\nvar _utilsBootstrapUtils = require('./utils/bootstrapUtils');\n\nvar _SafeAnchor = require('./SafeAnchor');\n\nvar _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);\n\nvar ButtonStyles = _styleMaps.State.values().concat(_styleMaps.DEFAULT, _styleMaps.PRIMARY, _styleMaps.LINK);\n\nvar types = ['button', 'reset', 'submit'];\n\nvar Button = function (_React$Component) {\n  _inherits(Button, _React$Component);\n\n  function Button(props, context) {\n    _classCallCheck(this, Button);\n\n    _React$Component.call(this, props, context);\n  }\n\n  Button.prototype.render = function render() {\n    var _extends2;\n\n    var classes = this.props.navDropdown ? {} : _utilsBootstrapUtils.getClassSet(this.props);\n    var renderFuncName = undefined;\n\n    var blockClass = _utilsBootstrapUtils.prefix(this.props, 'block');\n\n    classes = _extends((_extends2 = {\n      active: this.props.active\n    }, _extends2[blockClass] = this.props.block, _extends2), classes);\n\n    if (this.props.navItem) {\n      return this.renderNavItem(classes);\n    }\n\n    renderFuncName = this.props.href || this.props.target || this.props.navDropdown ? 'renderAnchor' : 'renderButton';\n    return this[renderFuncName](classes);\n  };\n\n  Button.prototype.renderAnchor = function renderAnchor(classes) {\n    var _props = this.props;\n    var disabled = _props.disabled;\n    var href = _props.href;\n    classes.disabled = disabled;\n    return _react2['default'].createElement(_SafeAnchor2['default'], _extends({}, this.props, {\n      href: href || '#',\n      className: _classnames2['default'](this.props.className, classes)\n    }), this.props.children);\n  };\n\n  Button.prototype.renderButton = function renderButton(classes) {\n    var Component = this.props.componentClass || 'button';\n    return _react2['default'].createElement(Component, _extends({}, this.props, {\n      type: this.props.type || 'button',\n      className: _classnames2['default'](this.props.className, classes)\n    }), this.props.children);\n  };\n\n  Button.prototype.renderNavItem = function renderNavItem(classes) {\n    var liClasses = {\n      active: this.props.active\n    };\n    return _react2['default'].createElement('li', {\n      className: _classnames2['default'](liClasses)\n    }, this.renderAnchor(classes));\n  };\n\n  return Button;\n}(_react2['default'].Component);\n\nButton.propTypes = {\n  active: _react2['default'].PropTypes.bool,\n  disabled: _react2['default'].PropTypes.bool,\n  block: _react2['default'].PropTypes.bool,\n  navItem: _react2['default'].PropTypes.bool,\n  navDropdown: _react2['default'].PropTypes.bool,\n  onClick: _react2['default'].PropTypes.func,\n\n  /**\n   * You can use a custom element for this component\n   */\n  componentClass: _reactPropTypesLibElementType2['default'],\n  href: _react2['default'].PropTypes.string,\n  target: _react2['default'].PropTypes.string,\n\n  /**\n   * Defines HTML button type Attribute\n   * @type {(\"button\"|\"reset\"|\"submit\")}\n   * @defaultValue 'button'\n   */\n  type: _react2['default'].PropTypes.oneOf(types)\n};\nButton.defaultProps = {\n  active: false,\n  block: false,\n  disabled: false,\n  navItem: false,\n  navDropdown: false\n};\nButton.types = types;\nexports['default'] = _utilsBootstrapUtils.bsStyles(ButtonStyles, _styleMaps.DEFAULT, _utilsBootstrapUtils.bsSizes([_styleMaps.Sizes.LARGE, _styleMaps.Sizes.SMALL, _styleMaps.Sizes.XSMALL], _utilsBootstrapUtils.bsClass('btn', Button)));\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}